"""
    The Plaid API

    The Plaid REST API. Please see https://plaid.com/docs/api for more details.  # noqa: E501

    The version of the OpenAPI document: 2020-09-14_1.64.13
    Generated by: https://openapi-generator.tech
"""


import unittest

import openapi_client
from openapi_client.api.plaid_api import PlaidApi  # noqa: E501


class TestPlaidApi(unittest.TestCase):
    """PlaidApi unit test stubs"""

    def setUp(self):
        self.api = PlaidApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_accounts_balance_get(self):
        """Test case for accounts_balance_get

        Retrieve real-time balance data  # noqa: E501
        """
        pass

    def test_accounts_get(self):
        """Test case for accounts_get

        Retrieve accounts  # noqa: E501
        """
        pass

    def test_application_get(self):
        """Test case for application_get

        Retrieve information about a Plaid application  # noqa: E501
        """
        pass

    def test_asset_report_audit_copy_create(self):
        """Test case for asset_report_audit_copy_create

        Create Asset Report Audit Copy  # noqa: E501
        """
        pass

    def test_asset_report_audit_copy_get(self):
        """Test case for asset_report_audit_copy_get

        Retrieve an Asset Report Audit Copy  # noqa: E501
        """
        pass

    def test_asset_report_audit_copy_remove(self):
        """Test case for asset_report_audit_copy_remove

        Remove Asset Report Audit Copy  # noqa: E501
        """
        pass

    def test_asset_report_create(self):
        """Test case for asset_report_create

        Create an Asset Report  # noqa: E501
        """
        pass

    def test_asset_report_filter(self):
        """Test case for asset_report_filter

        Filter Asset Report  # noqa: E501
        """
        pass

    def test_asset_report_get(self):
        """Test case for asset_report_get

        Retrieve an Asset Report  # noqa: E501
        """
        pass

    def test_asset_report_pdf_get(self):
        """Test case for asset_report_pdf_get

        Retrieve a PDF Asset Report  # noqa: E501
        """
        pass

    def test_asset_report_refresh(self):
        """Test case for asset_report_refresh

        Refresh an Asset Report  # noqa: E501
        """
        pass

    def test_asset_report_remove(self):
        """Test case for asset_report_remove

        Delete an Asset Report  # noqa: E501
        """
        pass

    def test_auth_get(self):
        """Test case for auth_get

        Retrieve auth data  # noqa: E501
        """
        pass

    def test_bank_transfer_balance_get(self):
        """Test case for bank_transfer_balance_get

        Get balance of your Bank Transfer account  # noqa: E501
        """
        pass

    def test_bank_transfer_cancel(self):
        """Test case for bank_transfer_cancel

        Cancel a bank transfer  # noqa: E501
        """
        pass

    def test_bank_transfer_create(self):
        """Test case for bank_transfer_create

        Create a bank transfer  # noqa: E501
        """
        pass

    def test_bank_transfer_event_list(self):
        """Test case for bank_transfer_event_list

        List bank transfer events  # noqa: E501
        """
        pass

    def test_bank_transfer_event_sync(self):
        """Test case for bank_transfer_event_sync

        Sync bank transfer events  # noqa: E501
        """
        pass

    def test_bank_transfer_get(self):
        """Test case for bank_transfer_get

        Retrieve a bank transfer  # noqa: E501
        """
        pass

    def test_bank_transfer_list(self):
        """Test case for bank_transfer_list

        List bank transfers  # noqa: E501
        """
        pass

    def test_bank_transfer_migrate_account(self):
        """Test case for bank_transfer_migrate_account

        Migrate account into Bank Transfers  # noqa: E501
        """
        pass

    def test_bank_transfer_sweep_get(self):
        """Test case for bank_transfer_sweep_get

        Retrieve a sweep  # noqa: E501
        """
        pass

    def test_bank_transfer_sweep_list(self):
        """Test case for bank_transfer_sweep_list

        List sweeps  # noqa: E501
        """
        pass

    def test_categories_get(self):
        """Test case for categories_get

        Get Categories  # noqa: E501
        """
        pass

    def test_create_payment_token(self):
        """Test case for create_payment_token

        Create payment token  # noqa: E501
        """
        pass

    def test_deposit_switch_alt_create(self):
        """Test case for deposit_switch_alt_create

        Create a deposit switch without using Plaid Exchange  # noqa: E501
        """
        pass

    def test_deposit_switch_create(self):
        """Test case for deposit_switch_create

        Create a deposit switch  # noqa: E501
        """
        pass

    def test_deposit_switch_get(self):
        """Test case for deposit_switch_get

        Retrieve a deposit switch  # noqa: E501
        """
        pass

    def test_deposit_switch_token_create(self):
        """Test case for deposit_switch_token_create

        Create a deposit switch token  # noqa: E501
        """
        pass

    def test_employers_search(self):
        """Test case for employers_search

        Search employer database  # noqa: E501
        """
        pass

    def test_employment_verification_get(self):
        """Test case for employment_verification_get

        Retrieve a summary of an individual's employment information  # noqa: E501
        """
        pass

    def test_identity_get(self):
        """Test case for identity_get

        Retrieve identity data  # noqa: E501
        """
        pass

    def test_income_verification_create(self):
        """Test case for income_verification_create

        (Deprecated) Create an income verification instance  # noqa: E501
        """
        pass

    def test_income_verification_documents_download(self):
        """Test case for income_verification_documents_download

        Download the original documents used for income verification  # noqa: E501
        """
        pass

    def test_income_verification_paystub_get(self):
        """Test case for income_verification_paystub_get

        (Deprecated) Retrieve information from a single paystub used for income verification  # noqa: E501
        """
        pass

    def test_income_verification_paystubs_get(self):
        """Test case for income_verification_paystubs_get

        Retrieve information from the paystubs used for income verification  # noqa: E501
        """
        pass

    def test_income_verification_precheck(self):
        """Test case for income_verification_precheck

        Check digital income verification eligibility and optimize conversion  # noqa: E501
        """
        pass

    def test_income_verification_refresh(self):
        """Test case for income_verification_refresh

        Refresh an income verification  # noqa: E501
        """
        pass

    def test_income_verification_summary_get(self):
        """Test case for income_verification_summary_get

        (Deprecated) Retrieve a summary of information derived from income verification  # noqa: E501
        """
        pass

    def test_income_verification_taxforms_get(self):
        """Test case for income_verification_taxforms_get

        Retrieve information from the tax documents used for income verification  # noqa: E501
        """
        pass

    def test_institutions_get(self):
        """Test case for institutions_get

        Get details of all supported institutions  # noqa: E501
        """
        pass

    def test_institutions_get_by_id(self):
        """Test case for institutions_get_by_id

        Get details of an institution  # noqa: E501
        """
        pass

    def test_institutions_search(self):
        """Test case for institutions_search

        Search institutions  # noqa: E501
        """
        pass

    def test_investments_holdings_get(self):
        """Test case for investments_holdings_get

        Get Investment holdings  # noqa: E501
        """
        pass

    def test_investments_transactions_get(self):
        """Test case for investments_transactions_get

        Get investment transactions  # noqa: E501
        """
        pass

    def test_item_access_token_invalidate(self):
        """Test case for item_access_token_invalidate

        Invalidate access_token  # noqa: E501
        """
        pass

    def test_item_application_list(self):
        """Test case for item_application_list

        List a userâ€™s connected applications  # noqa: E501
        """
        pass

    def test_item_application_scopes_update(self):
        """Test case for item_application_scopes_update

        Update the scopes of access for a particular application  # noqa: E501
        """
        pass

    def test_item_create_public_token(self):
        """Test case for item_create_public_token

        Create public token  # noqa: E501
        """
        pass

    def test_item_get(self):
        """Test case for item_get

        Retrieve an Item  # noqa: E501
        """
        pass

    def test_item_import(self):
        """Test case for item_import

        Import Item  # noqa: E501
        """
        pass

    def test_item_public_token_exchange(self):
        """Test case for item_public_token_exchange

        Exchange public token for an access token  # noqa: E501
        """
        pass

    def test_item_remove(self):
        """Test case for item_remove

        Remove an Item  # noqa: E501
        """
        pass

    def test_item_webhook_update(self):
        """Test case for item_webhook_update

        Update Webhook URL  # noqa: E501
        """
        pass

    def test_liabilities_get(self):
        """Test case for liabilities_get

        Retrieve Liabilities data  # noqa: E501
        """
        pass

    def test_link_token_create(self):
        """Test case for link_token_create

        Create Link Token  # noqa: E501
        """
        pass

    def test_link_token_get(self):
        """Test case for link_token_get

        Get Link Token  # noqa: E501
        """
        pass

    def test_payment_initiation_payment_create(self):
        """Test case for payment_initiation_payment_create

        Create a payment  # noqa: E501
        """
        pass

    def test_payment_initiation_payment_get(self):
        """Test case for payment_initiation_payment_get

        Get payment details  # noqa: E501
        """
        pass

    def test_payment_initiation_payment_list(self):
        """Test case for payment_initiation_payment_list

        List payments  # noqa: E501
        """
        pass

    def test_payment_initiation_payment_reverse(self):
        """Test case for payment_initiation_payment_reverse

        Reverse an existing payment  # noqa: E501
        """
        pass

    def test_payment_initiation_recipient_create(self):
        """Test case for payment_initiation_recipient_create

        Create payment recipient  # noqa: E501
        """
        pass

    def test_payment_initiation_recipient_get(self):
        """Test case for payment_initiation_recipient_get

        Get payment recipient  # noqa: E501
        """
        pass

    def test_payment_initiation_recipient_list(self):
        """Test case for payment_initiation_recipient_list

        List payment recipients  # noqa: E501
        """
        pass

    def test_processor_apex_processor_token_create(self):
        """Test case for processor_apex_processor_token_create

        Create Apex bank account token  # noqa: E501
        """
        pass

    def test_processor_auth_get(self):
        """Test case for processor_auth_get

        Retrieve Auth data  # noqa: E501
        """
        pass

    def test_processor_balance_get(self):
        """Test case for processor_balance_get

        Retrieve Balance data  # noqa: E501
        """
        pass

    def test_processor_bank_transfer_create(self):
        """Test case for processor_bank_transfer_create

        Create a bank transfer as a processor  # noqa: E501
        """
        pass

    def test_processor_identity_get(self):
        """Test case for processor_identity_get

        Retrieve Identity data  # noqa: E501
        """
        pass

    def test_processor_stripe_bank_account_token_create(self):
        """Test case for processor_stripe_bank_account_token_create

        Create Stripe bank account token  # noqa: E501
        """
        pass

    def test_processor_token_create(self):
        """Test case for processor_token_create

        Create processor token  # noqa: E501
        """
        pass

    def test_sandbox_bank_transfer_fire_webhook(self):
        """Test case for sandbox_bank_transfer_fire_webhook

        Manually fire a Bank Transfer webhook  # noqa: E501
        """
        pass

    def test_sandbox_bank_transfer_simulate(self):
        """Test case for sandbox_bank_transfer_simulate

        Simulate a bank transfer event in Sandbox  # noqa: E501
        """
        pass

    def test_sandbox_income_fire_webhook(self):
        """Test case for sandbox_income_fire_webhook

        Manually fire an Income webhook  # noqa: E501
        """
        pass

    def test_sandbox_item_fire_webhook(self):
        """Test case for sandbox_item_fire_webhook

        Fire a test webhook  # noqa: E501
        """
        pass

    def test_sandbox_item_reset_login(self):
        """Test case for sandbox_item_reset_login

        Force a Sandbox Item into an error state  # noqa: E501
        """
        pass

    def test_sandbox_item_set_verification_status(self):
        """Test case for sandbox_item_set_verification_status

        Set verification status for Sandbox account  # noqa: E501
        """
        pass

    def test_sandbox_oauth_select_accounts(self):
        """Test case for sandbox_oauth_select_accounts

        Save the selected accounts when connecting to the Platypus Oauth institution  # noqa: E501
        """
        pass

    def test_sandbox_processor_token_create(self):
        """Test case for sandbox_processor_token_create

        Create a test Item and processor token  # noqa: E501
        """
        pass

    def test_sandbox_public_token_create(self):
        """Test case for sandbox_public_token_create

        Create a test Item  # noqa: E501
        """
        pass

    def test_sandbox_transfer_repayment_simulate(self):
        """Test case for sandbox_transfer_repayment_simulate

        Trigger the creation of a repayment  # noqa: E501
        """
        pass

    def test_sandbox_transfer_simulate(self):
        """Test case for sandbox_transfer_simulate

        Simulate a transfer event in Sandbox  # noqa: E501
        """
        pass

    def test_sandbox_transfer_sweep_simulate(self):
        """Test case for sandbox_transfer_sweep_simulate

        Simulate creating a sweep  # noqa: E501
        """
        pass

    def test_signal_decision_report(self):
        """Test case for signal_decision_report

        Report whether you initiated an ACH transaction  # noqa: E501
        """
        pass

    def test_signal_evaluate(self):
        """Test case for signal_evaluate

        Evaluate a planned ACH transaction  # noqa: E501
        """
        pass

    def test_signal_return_report(self):
        """Test case for signal_return_report

        Report a return for an ACH transaction  # noqa: E501
        """
        pass

    def test_transactions_get(self):
        """Test case for transactions_get

        Get transaction data  # noqa: E501
        """
        pass

    def test_transactions_recurring_get(self):
        """Test case for transactions_recurring_get

        Get streams of recurring transactions  # noqa: E501
        """
        pass

    def test_transactions_refresh(self):
        """Test case for transactions_refresh

        Refresh transaction data  # noqa: E501
        """
        pass

    def test_transactions_sync(self):
        """Test case for transactions_sync

        Get incremental transaction updates on an Item  # noqa: E501
        """
        pass

    def test_transfer_authorization_create(self):
        """Test case for transfer_authorization_create

        Create a transfer authorization  # noqa: E501
        """
        pass

    def test_transfer_cancel(self):
        """Test case for transfer_cancel

        Cancel a transfer  # noqa: E501
        """
        pass

    def test_transfer_create(self):
        """Test case for transfer_create

        Create a transfer  # noqa: E501
        """
        pass

    def test_transfer_event_list(self):
        """Test case for transfer_event_list

        List transfer events  # noqa: E501
        """
        pass

    def test_transfer_event_sync(self):
        """Test case for transfer_event_sync

        Sync transfer events  # noqa: E501
        """
        pass

    def test_transfer_get(self):
        """Test case for transfer_get

        Retrieve a transfer  # noqa: E501
        """
        pass

    def test_transfer_intent_create(self):
        """Test case for transfer_intent_create

        Create a transfer intent object to invoke the Transfer UI  # noqa: E501
        """
        pass

    def test_transfer_intent_get(self):
        """Test case for transfer_intent_get

        Retrieve more information about a transfer intent  # noqa: E501
        """
        pass

    def test_transfer_list(self):
        """Test case for transfer_list

        List transfers  # noqa: E501
        """
        pass

    def test_transfer_repayment_list(self):
        """Test case for transfer_repayment_list

        Lists historical repayments  # noqa: E501
        """
        pass

    def test_transfer_repayment_return_list(self):
        """Test case for transfer_repayment_return_list

        List the returns included in a repayment  # noqa: E501
        """
        pass

    def test_transfer_sweep_get(self):
        """Test case for transfer_sweep_get

        Retrieve a sweep  # noqa: E501
        """
        pass

    def test_transfer_sweep_list(self):
        """Test case for transfer_sweep_list

        List sweeps  # noqa: E501
        """
        pass

    def test_wallet_get(self):
        """Test case for wallet_get

        Fetch an e-wallet  # noqa: E501
        """
        pass

    def test_wallet_transaction_execute(self):
        """Test case for wallet_transaction_execute

        Execute a transaction using an e-wallet  # noqa: E501
        """
        pass

    def test_wallet_transactions_list(self):
        """Test case for wallet_transactions_list

        List e-wallet transactions  # noqa: E501
        """
        pass

    def test_webhook_verification_key_get(self):
        """Test case for webhook_verification_key_get

        Get webhook verification key  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
